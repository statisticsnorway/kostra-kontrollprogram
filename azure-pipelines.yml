name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

# Pipeline triggers on any branch and tag
trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

# Pipeline will be run on this base image
pool:
  vmImage: ubuntu-latest

# Variables global to this pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
variables:
  # Variables defined in Pipelines->Library->Variable Groups in your project in
  # Azure Pipelines
  - group: Hemmeligheter
  # Variables defined here
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: ArtifactRevision
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
      value: "$(Build.SourceBranchName)"
    ${{ else }}:
      value: "$(Build.SourceBranchName)-SNAPSHOT"
  - name: MAVEN_OPTS
    value: '-DnewVersion=$(ArtifactRevision) -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Drevision=$(ArtifactRevision) -Dsonar.projectKey=statisticsnorway_kostra-kontrollprogram'


resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      # The version of the repo on GitHub. Change to needed version
      ref: refs/tags/1.1.44
      # Service connection in the barn project on Pipelines
      # with access to the template repository.
      endpoint: 'github-Barnevernsregisteret'

# Job which runs mvn test and verify, Sonar Analysis (if branch is master), mvn install,
# builds Docker image, pushes this to GCR and checks for any image vulnerabilities
jobs:
  - job: buildTestDockerBuildDockerPush
    displayName: 'Test/build app and deploy artifact'

    # Steps in this Job
    steps:
      - script: 'echo "Artifact revision: $(ArtifactRevision)"'
        displayName: 'Print ArtifactRevision'

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      # Maven caching to speed up pipeline build time
      - template: maven/task-cache.yml@templates

      # Authenticate to google artifact registry
      # See https://github.com/statisticsnorway/azure-pipelines-templates/blob/master/maven/task-authenticate-gar.yml
      - template: maven/task-authenticate-gar.yml@templates

      # Verify and run sonarcloud, for non-tag-builds
      # See https://github.com/statisticsnorway/azure-pipelines-templates/blob/master/maven/task-verify.yml
      - template: maven/task-verify.yml@templates
        parameters:
          sonarCloud: 'bipSonarCloud-Barnevernsregisteret'
          checkStyleRunAnalysis: false
          pmdRunAnalysis: false

      - task: Maven@3
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        displayName: Set POM-version
        inputs:
          goals: 'versions:set'
          options: '-DskipTests=true -Dmaven.javadoc.skip=true --batch-mode  $(MAVEN_OPTS)'
          mavenVersionOption: 'Default'
          javaHomeOption: 'JDKVersion'

      # Deploy artifact to artifact registry
      # Note: Only kostra-barnevern is deployed to artifact registry
      - task: Maven@3
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        displayName: 'Maven install and deploy'
        inputs:
          goals: 'deploy'
          mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
          options: '-DskipTests=true -Dmaven.javadoc.skip=true -U -pl kostra-barnevern -P ssb-bip --batch-mode -Djdk.tls.client.protocols="TLSv1.2"'
          mavenPomFile: 'pom.xml'
          javaHomeOption: 'JDKVersion'
          jdkArchitectureOption: 'x64'
