name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

# Pipeline triggers on any branch and tag
trigger:
  branches:
    exclude:
      - '*'

  tags:
    include:
      - 'v*'

pr:
  branches:
    exclude:
      - '*'

# Pipeline will be run on this base image
pool:
  vmImage: ubuntu-latest

# Variables global to this pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
variables:
  # Variables defined in Pipelines->Library->Variable Groups in your project in
  # Azure Pipelines
  - group: Hemmeligheter
  # Variables defined here
  - name: GRADLE_USER_HOME
    value: $(Pipeline.Workspace)/.gradle
  - name: ArtifactRevision
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
      value: "$(Build.SourceBranchName)"
    ${{ else }}:
      value: "$(Build.SourceBranchName)-SNAPSHOT"

resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      # The version of the repo on GitHub. Change to needed version
      ref: refs/tags/1.1.45
      # Service connection in the barn project on Pipelines with access to the template repository.
      endpoint: 'github-Barnevernsregisteret'

# Job which runs mvn test and verify, Sonar Analysis (if branch is master), mvn install,
# builds Docker image, pushes this to GCR and checks for any image vulnerabilities
jobs:
  - job: buildTest
    displayName: 'Test/build app and deploy artifact'

    # Job condition: Run these jobs on any branch, also tags
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')

    # Steps in this Job
    steps:
      - script: 'echo "Artifact revision: $(ArtifactRevision)"'
        displayName: 'Print ArtifactRevision'

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '21'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      # Authenticate to google artifact registry
      # See https://github.com/statisticsnorway/azure-pipelines-templates/blob/master/maven/task-authenticate-gar.yml
      - template: maven/task-authenticate-gar.yml@templates

      - task: Cache@2
        displayName: 'Configure Gradle caching'
        inputs:
          key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts'
          restoreKeys: |
            gradle | "$(Agent.OS)" | **/build.gradle.kts
            gradle | "$(Agent.OS)"
            gradle
          path: $(GRADLE_USER_HOME)

      - task: Gradle@3
        displayName: 'Publish to Artifact Registry'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        inputs:
          tasks: 'publishMavenPublicationToMavenRepository -p kostra-barnevern -Pversion=$(ArtifactRevision)'
          options: '--build-cache --info'
          gradleWrapperFile: 'gradlew'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '21'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - script: |
          # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
          ./gradlew --stop
        displayName: Stop the Gradle daemon
